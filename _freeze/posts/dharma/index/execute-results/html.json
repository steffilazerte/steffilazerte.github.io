{
  "hash": "026498393f5233fb9d44084280d285ab",
  "result": {
    "markdown": "---\ntitle: \"DHARMa - Diagnostics for General Linear Models\"\ndate: \"2022-12-01\"\ncategories: [stats, lm, diagnostics, glm, R]\n---\n\n\n\n\n\n[DHARMa](https://github.com/florianhartig/DHARMa) is a great R package for\nchecking model diagnostics, especially for models that are typically hard to\nevaluate (e.g., glms etc.).\n\n### Simulated Residuals\n\nDHARMa works by *simulating* residuals.\n\nThis figure (from the [DHARMa tutorial](https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html)) is an illustration of how the residuals are calculated...\n\n![](ECDFmotivation.png){fig-alt=\"Pink histogram showing simulated values for data point1 on the x-axis and cumulative density on the y\" width=60% fig-align=\"center\"}\n\n\n- **If** your data perfectly matched your model, what would the values look like?  \n  - Pink histogram values show repeatedly *simulated* values expected\n \n- How do your *actual* values compare?  \n  - Black arrow on x-axis shows *actual* value\n  - Black arrow on y-axis shows residual calculated\n  - Residuals calculated by where observation lies on cumulative density\n    of simulated values\n\n- Residuals are scaled (0 to 1)\n  - If data fits model perfectly, expect all residuals ~ 0.5\n  - Therefore, a good fit is *always* = flat/uniform distribution\n\n### Interpreting Residuals\n\n**If** your data fits the model\n\n- Residuals follow a flat (uniform) distribution (no matter what  model!)  \n- Expect: Straight line on QQ plot of **uniform** distribution [**(similar to [QQ Normal plot](../diagnostics-lm/#normality))**]{.small}\n- Expect: No patterns between residuals and model predictions [**(similar to [heteroscedasticity plot](../diagnostics-lm/#constant-variance), resid vs. fitted)**]{.small}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n> **Note:**  \n> These aren't the same residual plots that one would usually use to assess\n> model fit, *but* you can interpret them in a similar manner, when looking for problems\n\n**Closer Look at QQ Plots**\n\n- Visual check of **uniform distribution** (expect points to match line)\n- Tests **Uniformity** with Kolmogorov-Smirnov (KS) test (Uniform distribution)\n- Tests for **Over/Underdispersion** with Dispersion Test\n- Tests for more **Outliers** than expected with Outlier test\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n**Closer Look at Residuals vs. Predicted Plots**\n\n- Check distribution of residuals [(visually and with quantile tests)]{.small}\n- Dotted lines show expected quantiles\n- Black lines show simulated quantiles [(want straight lines)]{.small}\n- Outliers would show up as red stars\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Usage\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(DHARMa)\nlibrary(palmerpenguins)\n\nm <- lm(body_mass_g ~ flipper_length_mm, data = penguins)\nr <- simulateResiduals(m, n = 1000, plot = TRUE)\n```\n:::\n\n\n- `simulateResiduals()` function from \n- Use `plot = TRUE` to produce diagnostic plots to see if simulated match expectation\n- `n = 1000` isn't strictly necessary but runs more simulations to produce more stable results  \n\n\n### Applicable to Most Linear Models\n\n- REMEMBER! Not assessing residuals in the [traditional](../diagnostics-lm) way...\n- Assessing whether residuals fit expected pattern given this model\n- This *includes* assumptions, but *also* includes general fit, etc.\n- So, we can use this to see if our model could be improved...\n- And we can use DHARMa to test various different types of models\n\n\nFor example, binomial models\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins <- mutate(penguins, \n                   size = flipper_length_mm > median(flipper_length_mm, na.rm = TRUE))\n\nm <- glm(size ~ species, family = \"binomial\", data = penguins)\nr <- simulateResiduals(m, plot = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n### Other Tests\n\nIn addition to testing for outliers, over/underdispersion, etc., DHARMa also has\ntests for zero-inflation. \n\nBut important to remember that...\n\n- zero-inflation may also appear as iffy residuals\n- overdispersion can lead to false positives (so address overdispersion first)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntestZeroInflation(m)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDHARMa zero-inflation test via comparison to expected zeros with\n\tsimulation under H0 = fitted model\n\ndata:  simulationOutput\nratioObsSim = 0.99699, p-value = 1\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\n\n### Resources\n\n- [DHARMa Tutorial](https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html) [(Many great examples of model checking)]{.small}\n\n\n### Session Info\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndevtools::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       Ubuntu 22.04.3 LTS\n system   x86_64, linux-gnu\n ui       X11\n language en_CA:en\n collate  en_CA.UTF-8\n ctype    en_CA.UTF-8\n tz       America/Winnipeg\n date     2023-09-04\n pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version date (UTC) lib source\n bit              4.0.5   2022-11-15 [1] CRAN (R 4.3.0)\n bit64            4.0.5   2020-08-30 [1] CRAN (R 4.3.0)\n boot             1.3-28  2021-05-03 [4] CRAN (R 4.2.0)\n cachem           1.0.8   2023-05-01 [1] CRAN (R 4.3.0)\n callr            3.7.3   2022-11-02 [1] CRAN (R 4.3.0)\n cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)\n codetools        0.2-19  2023-02-01 [4] CRAN (R 4.2.2)\n crayon           1.5.2   2022-09-29 [1] CRAN (R 4.3.0)\n curl             5.0.0   2023-01-12 [1] CRAN (R 4.3.0)\n devtools         2.4.5   2022-10-11 [1] CRAN (R 4.3.0)\n DHARMa         * 0.4.6   2022-09-08 [1] CRAN (R 4.3.1)\n digest           0.6.31  2022-12-11 [1] CRAN (R 4.3.0)\n doParallel       1.0.17  2022-02-07 [1] CRAN (R 4.3.1)\n dplyr          * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)\n ellipsis         0.3.2   2021-04-29 [1] CRAN (R 4.3.0)\n evaluate         0.20    2023-01-17 [1] CRAN (R 4.3.0)\n fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.0)\n fastmap          1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n foreach          1.5.2   2022-02-02 [1] CRAN (R 4.3.0)\n fs               1.6.2   2023-04-25 [1] CRAN (R 4.3.0)\n gap              1.5-3   2023-08-26 [1] CRAN (R 4.3.1)\n gap.datasets     0.0.6   2023-08-25 [1] CRAN (R 4.3.1)\n generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n glue             1.6.2   2022-02-24 [1] CRAN (R 4.3.0)\n hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.0)\n htmltools        0.5.5   2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.0)\n httpuv           1.6.9   2023-02-14 [1] CRAN (R 4.3.0)\n iterators        1.0.14  2022-02-05 [1] CRAN (R 4.3.0)\n jsonlite         1.8.4   2022-12-06 [1] CRAN (R 4.3.0)\n knitr            1.42    2023-01-25 [1] CRAN (R 4.3.0)\n later            1.3.0   2021-08-18 [1] CRAN (R 4.3.0)\n lattice          0.21-8  2023-04-05 [4] CRAN (R 4.3.0)\n lifecycle        1.0.3   2022-10-07 [1] CRAN (R 4.3.0)\n lme4             1.1-33  2023-04-25 [1] CRAN (R 4.3.0)\n magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n MASS             7.3-60  2023-05-04 [4] CRAN (R 4.3.1)\n Matrix           1.6-0   2023-07-08 [4] CRAN (R 4.3.1)\n memoise          2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n mgcv             1.9-0   2023-07-11 [4] CRAN (R 4.3.1)\n mime             0.12    2021-09-28 [1] CRAN (R 4.3.0)\n miniUI           0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0)\n minqa            1.2.5   2022-10-19 [1] CRAN (R 4.3.0)\n nlme             3.1-162 2023-01-31 [4] CRAN (R 4.2.2)\n nloptr           2.0.3   2022-05-26 [1] CRAN (R 4.3.0)\n palmerpenguins * 0.1.1   2022-08-15 [1] CRAN (R 4.3.0)\n pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild         1.4.0   2022-11-27 [1] CRAN (R 4.3.0)\n pkgconfig        2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n pkgload          1.3.2   2022-11-16 [1] CRAN (R 4.3.0)\n plyr             1.8.8   2022-11-11 [1] CRAN (R 4.3.0)\n prettyunits      1.1.1   2020-01-24 [1] CRAN (R 4.3.0)\n processx         3.8.1   2023-04-18 [1] CRAN (R 4.3.0)\n profvis          0.3.7   2020-11-02 [1] CRAN (R 4.3.0)\n promises         1.2.0.1 2021-02-11 [1] CRAN (R 4.3.0)\n ps               1.7.5   2023-04-18 [1] CRAN (R 4.3.0)\n purrr            1.0.1   2023-01-10 [1] CRAN (R 4.3.0)\n qgam             1.3.4   2021-11-22 [1] CRAN (R 4.3.1)\n R6               2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n rbibutils        2.2.15  2023-08-21 [1] CRAN (R 4.3.1)\n Rcpp             1.0.10  2023-01-22 [1] CRAN (R 4.3.0)\n Rdpack           2.5     2023-08-21 [1] CRAN (R 4.3.1)\n readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)\n remotes          2.4.2   2021-11-30 [1] CRAN (R 4.3.0)\n rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown        2.21    2023-03-26 [1] CRAN (R 4.3.0)\n rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.3.0)\n sessioninfo      1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n shiny            1.7.4   2022-12-15 [1] CRAN (R 4.3.0)\n stringi          1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr          1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n tibble           3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)\n tzdb             0.3.0   2022-03-28 [1] CRAN (R 4.3.0)\n urlchecker       1.0.1   2021-11-30 [1] CRAN (R 4.3.0)\n usethis          2.2.0   2023-06-06 [1] CRAN (R 4.3.0)\n utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.0)\n vctrs            0.6.2   2023-04-19 [1] CRAN (R 4.3.0)\n vroom            1.6.3   2023-04-28 [1] CRAN (R 4.3.0)\n xfun             0.39    2023-04-20 [1] CRAN (R 4.3.0)\n xtable           1.8-4   2019-04-21 [1] CRAN (R 4.3.0)\n yaml             2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /home/steffi/R/x86_64-pc-linux-gnu-library/4.3\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}